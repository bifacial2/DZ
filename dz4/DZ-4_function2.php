<?php
/**
 * Created by PhpStorm.
 * User: Станислав
 * Date: 13.02.2017
 * Time: 21:18
 */
/*1. Дан массив с произвольными числами. Сделайте так, чтобы элемент повторился в массиве количество раз, соответствующее его числу. Пример: array(1, 3, 2, 4)  ревратится в array(1, 3, 3, 3, 2, 2, 4, 4, 4, 4) .*/
echo '<h1>---------------------------------------Задача 1--------------------------------------------------------------------</h1>';
$arr = array(1, 3, 4, 2);
function arr($a)
{
    $temp = array();
    foreach ($a as $value) {
        for ($i = 0; $i < $value; $i++) {
            $temp[] = $value;
        }
    }
    return $temp;
}

$fun = arr($arr);
print_r($fun);

echo '<h1>---------------------------------------Задача 2--------------------------------------------------------------------</h1>';
/*2. Дан массив с произвольными целыми числами. Сделайте так, чтобы первый элемент стал ключом второго элемента, третий элемент - ключом четвертого и так далее. Пример: array(1, 2, 3, 4, 5, 6) превратится в array(1=>2, 3=>4, 5=>6) .*/
$arr1 = array(1, 2, 3, 4, 5, 6);
function rev($a)
{
    $temp = array();
    for ($i = 0; $i < count($a); $i += 2) {
        $temp += [$a[$i] => $a[$i + 1]];

    }
    return $temp;
}

$rev = rev($arr1);
print_r($rev);

echo '<h1>---------------------------------------Задача 3--------------------------------------------------------------------</h1>';

/*3. Дана строка. Удалите из этой строки четные символы.*/

$str = '2334534654';
echo $str . '<br>';
function del($a)
{
    $str = '';
    for ($i = 0; $i < strlen($a); $i++) {
        if (((integer)$a[$i]) % 2 == 0) {
            $str .= $a[$i];
        }
    }
    return $str;
}

$del = del($str);
print_r($del);

echo '<h1>---------------------------------------Задача 4--------------------------------------------------------------------</h1>';

/*4. Дана строка. Поменяйте ее первый символ на второй и наоборот, третий на четвертый и наоборот, пятый на шестой и наоборот и так далее. То есть из строки '12345678' нужно сделать '21436587' .*/
$var = '12345678';
function varr($a)
{
    for ($i = 0; $i < strlen($a); $i += 2) {
        $temp = $a[$i];
        $a[$i] = $a[$i + 1];
        $a[$i + 1] = $temp;
    }
    return $a;
}

$var1 = varr($var);
print_r($var1);


echo '<h1>---------------------------------------Задача 5--------------------------------------------------------------------</h1>';

/*5. Напишите функцию, которая подсчитывает количество всех значений массива. Функция должна учитывать вложенность массивов. (функцией array_count_values пользоваться нельзя).*/

function mycount($values)
{
    if (is_null($values)) {
        return 0;
    }
    if (!is_array($values)) {
        return 1;
    }
    $count = 0;
    foreach ($values as $value) {
        if (is_array($value)) {
            mycount($value);
            $count += mycount($value);
        } else {
            $count++;
        }
    }
    return $count;
}

$arr = [1, 2, 3, array(4, 5)];

echo mycount($arr);

echo '<h1>---------------------------------------Задача 6--------------------------------------------------------------------</h1>';
/*6. Напишите функцию, которой в параметре передается передается массив из случайных чисел. Функция возвращает массив из уникальных (не повторяющихся) значений (аналог функции array_unique).*/

function test3($array)
{

    foreach ($array as $key1 => $value1) {
        $a = 0;
        foreach ($array as $key2 => $value2) {

            if ($value1 == $value2) {
                if ($a == 0) {
                    $a++;
                    continue;
                }
                unset($array[$key2]);
            }
        }
    }
    return $array;
}

$a = [1, 2, 2, 3, 4, 4, 5];
$a = test3($a);
print_r($a);

echo '<h1>---------------------------------------Задача 7--------------------------------------------------------------------</h1>';

/*7. Напишите функцию, которая будет противоположной array_unique, т.е. будет оставлять дубликаты, но удалять не повторяющиеся значения.*/

$arr = [1, 1, 2, 3, 4, 2, 2, 2, 2, 2, 3, 6, 9, 9, 99, 8, 6, 8, 10];
function foo2($a)
{
    $count = count($a);

    $duplicate = [];
    for ($i = 0; $i < $count; $i++) {
        $has_duplicate = false;
        for ($j = 0; $j < $count; $j++) {

            if ($a[$i] == $a[$j] && $i != $j) {
                $has_duplicate = true;
                break;
            }
        }
        if ($has_duplicate) {
            $duplicate[] = $a[$i];
        }
    }
    return $duplicate;
}


print_r (foo2($arr));


echo '<h1>---------------------------------------Задача 8--------------------------------------------------------------------</h1>';

/*8. Напишите функцию, которой передается фамилия имя и отчество, а функция возвращает фамилию и инициалы. Например, передаем Ivanov Ivan Ivanovich и нам выводит: Ivanov I. I.*/

$surname = 'Ivanov';
$name = 'Ivan';
$otch = 'Ivanovich';
function fio($a, $b, $c)
{

    return $a . ' ' . $b{0} . '.' . $c{0} . '.';
}

echo fio($surname, $name, $otch);

echo '<h1>---------------------------------------Задача 9 (+1)--------------------------------------------------------------------</h1>';

/*9. ( +1 ) Таблица умножения. Напишите функцию, которая принимает на вход два параметра: количество строк и количество колонок. Функция возвращает ( не выводит на экран! ) таблицу умножения вида http://joxi.ru/brR577kiJJNRXA . Можно использовать table или div теги html. Цвет перемножаемых колонок и строк можете задать отдельным третьим параметром в виде hex-кода цвета .*/

$rous = 10;
$colums = 10;
function tabl($a, $b)
{

    echo '<table border = 1>';
    echo "<tr>";
    for ($i = 1; $i <= $a; $i++) {
        echo "<tr>";
        for ($j = 1; $j <= $b; $j++) {
            if ($i == 1 || $j == 1) {
                echo "<td bgcolor = #32cd32><b>" . $i * $j . "</b></td>";
            } else {
                echo "<td><b>" . $i * $j . "</b></td>";
            }
        }
    }
    echo "</tr>";
    echo '</table>';
    return;

}

$tabl = tabl($rous, $colums);
echo $tabl;

echo '<h1>---------------------------------------Задача 10 (+1)--------------------------------------------------------------------</h1>';
/*10. ( +1 ) Написать рекурсивную функцию , которая на вход получает число и вычисляет и возвращает значение факториала этого числа.*/

function fact($x)
{
    if ($x == 0) {
        return 1;
    } else {
        return $x * fact($x - 1);
    }
}

echo fact(4);

echo '<h1>---------------------------------------Задача 11 (+1)--------------------------------------------------------------------</h1>';

/*11.( +1 ) Написать функцию (рекурсивную либо обычную - по желанию), которая принимает на вход параметр (например, $n) и вычисляет число Фибоначчи до предела $n. Результат вычисления возвращается этой же функцией.*/

fibonacci(10);
function fibonacci($n)
{
    $a = 0;
    $b = 1;
    $r = 0;
    for ($i = 0; $i < $n; $i++) {
        $r = $a + $b;
        $a = $b;
        $b = $r;
        echo $r . ' ';
    }

}

echo '<h1>---------------------------------------Задача 12 (+1)--------------------------------------------------------------------</h1>';

/*12.( +1 ) Напишите рекурсивную функцию , принимающую на вход натуральное число $n. Функция возвращает строку из всех чисел от 1 до $n либо от $n до 1. За порядок сортировки должен отвечать дополнительный параметр функции - $order, который может принимать значение ‘desc’ (убывающий) или ‘asc’ (возрастающий) и по-умолчанию должен быть равен ‘desc’.*/
$temp_var = 0;
$order='ask';

function recursion($a, $order){

    global $temp_var;

    if($order == 'desc') {
        if ($a > 0) {
            echo "$a\n";
            recursion($a - 1, $order);
        }
    }
    if ($order == 'ask' && $temp_var < $a) {
        echo "$temp_var\n";
        $temp_var ++;
        recursion($a, $order);
    }
    return;
}
recursion(19, $order);