<?php
/**
 * Created by PhpStorm.
 * User: Stas
 * Date: 20.02.2017
 * Time: 21:29
 */
echo "<h1>------------------------------------Работа с регистром символов-----------------------------------------</h1>";
echo "<h1>--------------------------------------------1-----------------------------------------------------------</h1>";
/*1. Дана строка 'Привет, мир!'. Сделайте из нее строку 'ПРИВЕТ МИР!'.*/
$str = 'Привет, мир!';
$str = mb_convert_case($str, MB_CASE_UPPER);
echo $str;
echo "<h1>--------------------------------------------2-----------------------------------------------------------</h1>";
/*2. Дана строка 'PHP'. Сделайте из нее строку 'php'.*/
$str1 = 'PHP';
$str1 = mb_convert_case($str1, MB_CASE_LOWER);
echo $str1;
echo "<h1>--------------------------------------------3-----------------------------------------------------------</h1>";
/*3. Дана строка 'москва'. Сделайте из нее строку 'Москва'.*/
$str2 = 'москва';
$str2 = mb_convert_case($str2, MB_CASE_TITLE);
echo $str2;
echo "<h1>--------------------------------------------4-----------------------------------------------------------</h1>";
/*4. Дана строка 'МОСКВА'. Сделайте из нее строку 'Москва'.*/
$str3 = 'МОСКВА';
$str3 = mb_convert_case($str3, MB_CASE_TITLE);
echo $str3;
echo "<h1>--------------------------------------------5-----------------------------------------------------------</h1>";
/*5. Дана строка 'иванов иван иванович'. Сделайте из нее строку 'Иванов Иван Иванович'.*/
$str4 = 'иванов иван иванович';
$str4 = mb_convert_case($str4, MB_CASE_TITLE);
echo $str4;
echo "<h1>--------------------------------------Работа с strlen, substr-------------------------------------------</h1>";
echo "<h1>--------------------------------------------6-----------------------------------------------------------</h1>";
/*6. Дана строка 'я учу PHP!'. Найдите количество символов в этой строке.*/
$str5 = "i learn php!";
echo strlen($str5);

echo "<h1>--------------------------------------------7-----------------------------------------------------------</h1>";
/*7. Дана строка 'я учу PHP!'. Вырежьте из нее слово 'учу' и слово 'PHP'.*/
$learn = 'я учу PHP!';
$learn1 = substr($learn,3,7);
$learn2 = substr($learn,9,4);

echo $learn1 . '<br>' . $learn2;

echo "<h1>--------------------------------------------8-----------------------------------------------------------</h1>";
/*8. Дана переменная $str, в которой хранится какой-либо текст. Реализуйте обрезание длинного текста по следующему принципу: если количество символов этого текста больше заданного в переменной $n, то в переменную $result запишем первые $n символов строки $str и добавим в конец многоточие '...'. В противном случае в переменную $result запишем содержимое переменной $str.*/
$n = 20;
$str5 = 'lorem ipsum dolor sit amet';
if (strlen($str5)>$n){
    $result = substr($str5, 0, $n);
    echo $result . ' ...';
}
else{
    $result = $str5;
    echo $result;
}
echo "<h1>--------------------------------------------9-----------------------------------------------------------</h1>";
/*9. Напишите функцию, которая генерирует пароль. Функция должна принимать параметр. Параметр должен задавать количество символов в пароле.*/
$n1=9;
function pas($n){
    $password1 = null;
    for ($i=0;$i<$n;$i++){
        $password1 .= rand(1,9);

    }
    return $password1;
}
echo pas($n1);

echo "<h1>--------------------------------------------10-----------------------------------------------------------</h1>";
/*10. Создайте переменную $password. Присвойте переменной $password результат функции из предыдущего примера. Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите пользователю сообщение о том, что пароль подходит, иначе сообщение о том, что нужно придумать другой пароль.*/
$password = pas($n1);
if (strlen($password)>5 && strlen($password)<10){
    echo $password . ' Пароль подходит';
}
else{
    echo $password . ' Ошибка нужно придумать другой пароль';
}

echo "<h1>--------------------------------------------11-----------------------------------------------------------</h1>";
/*11. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно столько рядов, чтобы последний элемент пирамидки состоял из одного символа. Первый ряд пирамиды должен хранится в переменной $str (может иметь различное количество символов). Подсказка: воспользуйтесь функциями strlen и substr.*/

$pir = 'xxxxxxxxx';
$strlen1=strlen($pir);
for ($i = 0;$i<$strlen1;$i++){
    $result3 = substr($pir,$i);
    echo $result3 . '<br>';
}

echo "<h1>--------------------------------------Работа с str_replace-------------------------------------------</h1>";
echo "<h1>--------------------------------------------12-----------------------------------------------------------</h1>";
/*12. Дана строка 'Я-учу-PHP!'. Замените все дефисы на тег '<br>'.*/
$learnn = 'Я-учу-PHP!';
$learnn = str_replace('-','<br>',$learnn);
echo $learnn;
echo "<h1>--------------------------------------------13-----------------------------------------------------------</h1>";
/*13. Дана строка '31.12.2013'. Замените все точки на дефисы.*/
$date = '31.12.2013';
$date = str_replace('.','-',$date);
echo $date;

echo "<h1>--------------------------------------------14-----------------------------------------------------------</h1>";
/*14. Дана строка $str. Замените смайлики ':)', ':(', '^-^', которые встречаются в этой строке на соответсвующие картинки (<img src=''>).*/
$str6 = ':) :( ^-^';
$str_arr = array(':)', ':(', '^-^');
$str_arr1 = ['<img src=http://i.smiles2k.net/big_smiles/big_smiles_9.gif border=0>',
    '<img src=http://i.smiles2k.net/big_smiles/0099.gif border=0>',
    '<img src=http://i.smiles2k.net/big_smiles/big_smiles_36.gif border=0>'];
$str6 = str_replace($str_arr, $str_arr1, $str6);
echo $str6;

echo "<h1>--------------------------------------------15-----------------------------------------------------------</h1>";
/*15. Дана переменная $str, в которой хранится строка русского текста. Напишите скрипт, который запишет транслит этого текста в переменную $translit. Напишите также скрипт, который выполнит обратную операцию.*/
$str7 = 'я учу ПХП';
$rus_alphabet = array(
 'П','Х','у','ч','я'
);

$rus_alphabet_translit = array(
'P','H','u','ch','ia'
);
echo str_replace($rus_alphabet, $rus_alphabet_translit, $str7);
echo "<h1>--------------------------------------Работа с explode, implode-------------------------------------------</h1>";
echo "<h1>--------------------------------------------16-----------------------------------------------------------</h1>";
/*16. Дана строка 'я учу PHP!'. С помощью функции explode запишите каждое слово этой строки в отдельный элемент массива.*/

$arr1 = explode(' ', 'я учу PHP!');
print_r($arr1);
echo "<h1>--------------------------------------------17-----------------------------------------------------------</h1>";
/*17. Дан массив с элементами 'html', 'css', 'php', 'js'. С помощью функции implode создайте строку из этих элементов, разделенных запятыми.*/
$arr2 = array('html', 'css', 'php', 'js');
echo implode(', ', $arr2);
echo "<h1>--------------------------------------------18-----------------------------------------------------------</h1>";
/*18. В переменной $date лежит дата в формате '2013-12-31'. Преобразуйте эту дату в формат '31.12.2013'.*/
$date4 = '2013-12-31';
$arr3 = explode('-', $date4);
echo $arr3[2].'.'.$arr3[1].'.'.$arr3[0];
echo "<h1>--------------------------------------------19-----------------------------------------------------------</h1>";
/*19. В переменной $date лежит дата в формате '31.12.2013'. Преобразуйте эту дату в формат '2013-12-31'.*/
$date2 = '31.12.2013';
$arr5 = explode( '.',$date2);
echo $arr5[2].'-'.$arr5[1].'-'.$arr5[0];

echo "<h1>--------------------------------------Работа с trim, ltrim, rtrim-------------------------------------------</h1>";
echo "<h1>--------------------------------------------20-----------------------------------------------------------</h1>";
/*20. Дана строка ' php '. Сделайте из нее 3 разных строки с помощью функций класса trim: 'php', ' php', 'php '.*/
$str = ' php ';
echo trim($str).'<br>';
echo rtrim($str).'<br>';
echo ltrim($str);

echo "<h1>--------------------------------Работа с strip_tags и htmlspecialchars----------------------------------</h1>";
echo "<h1>--------------------------------------------21-----------------------------------------------------------</h1>";
/*21. Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки.*/

echo strip_tags('html, <b>php</b>, js');

echo "<h1>--------------------------------------------22-----------------------------------------------------------</h1>";
/*22. Дана строка 'html, <b>php</b>, js'. Выведите ее на экран 'как есть': то есть браузер не должен преобразовать <b> в жирный.*/

echo htmlspecialchars('html, <b>php</b>, js');

echo "<h1>-------------------------------------Работа с chr и ord-------------------------------------------------</h1>";
echo "<h1>--------------------------------------------23-----------------------------------------------------------</h1>";

/*23. Узнайте код символов 'a', 'b', 'c', пробела.*/
echo ord('a') . '<br>';
echo ord('b') . '<br>';
echo ord('c') . '<br>';
echo ord(' ');
echo "<h1>--------------------------------------------24-----------------------------------------------------------</h1>";
/*24. Изучите таблицу ASCII. Определите границы, в которых располагаются буквы английского алфавита. Выведите на экран символ с кодом 33.*/

echo chr(33);
echo "<h1>--------------------------------------------25-----------------------------------------------------------</h1>";
/*25. Запишите в переменную $str случайный символ — большую букву латинского алфавита. Подсказка: с помощью таблицы ASCII определите какие целые числа соответствуют большим буквам латинского алфавита.*/
$str7 = chr(rand(65, 90));
echo $str7;
echo "<h1>--------------------------------------------26-----------------------------------------------------------</h1>";
/*26. Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв латинского алфавита. Подсказка: воспользуйтесь циклом for или while.*/
$st = '';
$len1 = 10;
for ($i = 0; $i < $len1; $i++)
{
    $st .= chr(rand(97, 122));
}
echo $st;
echo "<h1>-----------------------Работа с substr_count, str_word_count, str_split---------------------------------</h1>";
echo "<h1>--------------------------------------------27-----------------------------------------------------------</h1>";
/*27. Дана строка 'Мама мыла раму'. Узнайте количество букв 'a' и 'м', входящих в эту строку.*/
$str8 = 'Мама мыла раму';
echo $str8 . '<br>';
echo 'м - ' . substr_count($str8, 'м').'<br>';
echo 'a - ' . substr_count($str8, 'а');
echo "<h1>--------------------------------------------28-----------------------------------------------------------</h1>";
/*28. Скопируйте весь текст со страницы php.su, запишите его в переменную $str. Подсчитайте количество символов и количество слов в даннной строке.*/
$strr = 'Уроки PHP. На основе дискуссий форума PHP.SU.Вы начинаете изучать PHP? Ознакомьтесь с вводным курсом обучения PHP.Так же для новичков наши профессионалы собрали материалы по форуму PHP.SU и разместили это в виде Уроков PHP.Знаете основы PHP и хотите укрепить свои познания? Обратитесь непосредственно к разделу "Изучение PHP". Рекомендуем также ознакомиться с принципами работы PHP с протоколом HTTP.Вам также потребуется справочник по всем функциям PHP, полностью на русском. 
Справочник по функциям PHP оснащен системой поиска функций по ключевым словам.В PHP есть обширные средства для работы с СУБД, такими, как MySQL. Вы можете использовать PHP для работы с большим количеством различных типов СУБД.Наш портал содержит множество статей по PHP, MySQL, Apache, PEAR, регулярным выражениям, XML, другим веб-технологиям. Общее число статей на данный момент составляет более 250.У нас Вы найдете большое количество учебников и справочников по PHP, MySQL, HTML, XML, JavaScript и.т.д.Для того, чтобы заниматься разработкой PHP скриптов и их отладкой, Вам необходим интерпретатор PHP, а также веб-сервер, например, Apache. 
Если Вы будете создавать скрипты с использованием баз данных, то хорошим выбором будет MySQL.Если Вы уже достаточно продвинутый пользователь и хотите самостоятельно установить и сконфигурировать веб-сервер, PHP и MySQL, то Вам в помощь раздел "Подготовка к работе".Раздел "PHP скрипты" поможет Вам скачать большое количество различных скриптов PHP.Раздел "Download" поможет Вам скачать необходимые компоненты: PHP, Apache, MySQL, PECL, PEAR, редакторы PHP кода, полезные утилиты для PHP и документацию по PHP, MySQL, PEAR и Apache.';
echo str_word_count($strr).' коичество слов'.'<br>';
echo mb_strlen($strr) . ' количество символов';

echo "<h1>--------------------------------------------29-----------------------------------------------------------</h1>";
/*29. Создайте массив гласных букв. С помощью этого массива подсчитайте количество гласных в строке $str. Результат представьте в виде ассоциативного массива, где ключами будут буквы, а элементами их количество.*/
$strr1 = 'рекомендуем также ознакомиться с принципами работы PHP';
$letter = array(
        'а','е', 'ё','и', 'й','о','у','ы','э','ю','я'
);
$arr4 = '';
foreach ($letter as $lette)
{
    $arr4[$lette] = substr_count($strr1, $lette);
}
var_dump($arr4);

echo "<h1>--------------------------------------------30-----------------------------------------------------------</h1>";
/*30. Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56', '78', '90'.*/
print_r(str_split('1234567890', 2));
echo "<h1>-------------------------------Работа с str_repeat, strrev-----------------------------------------------</h1>";
echo "<h1>--------------------------------------------31-----------------------------------------------------------</h1>";
/*31. Проверьте, является ли пара слов палиндромом (одинаково читается во всех направлениях, кот-ток, нос-сон).*/
$prov = 'coc';
$rev1 = strrev($prov);
if ($rev1 == $prov)
{
    echo $prov. ' - это слово палиндром';
}
echo "<h1>--------------------------------------------32-----------------------------------------------------------</h1>";
/*32. Дан массив $arr. Найдите в нем все пары слов-палиндромов (одинаково читаются во всех направлениях, кот-ток, нос-сон). Результат выводите в виде строка формата 'нос — сон'. Проверьте работу скрипта на массиве $arr из примера. Совет: нужно сделать не один, а два цикла.*/
$arr6 = array('slon', 'nos', 'tok', 'tak', 'kot', 'pir', 'mir','son', 'rim');
for ($i=0;$i<count($arr6);$i++){
    for ($j=1;$j<count($arr6);$j++)
        if ($arr6[$i] == strrev($arr6[$j])){
        echo $arr6[$i] . '-' . $arr6[$j] . '<br>';
        }
}
echo "<h1>--------------------------------------------33-----------------------------------------------------------</h1>";
/*33. Определите является ли фраза палиндромом. Примеры: 'A roza upala na lapu Asora'. Обратите внимание на то, что при обратном чтении игнорируются пробелы, запятые, дефисы, тире и большие буквы (подсказка: значит сначала нужно привести строку к стандартному виду — удалить лишние символы, привести все к нижнему регистру).*/
$strr2 = 'A roza upala na lapu Asora';
$strr2 = str_replace(array(',', '.', '-', '!', '?', ' '), '', $strr2);
$strr2 = strtolower($strr2);
echo $strr2 . ' - не паралинром';
if ($strr2 == strrev($strr2))
{
    echo $strr2. ' - это фраза палиндром';
}
echo "<h1>--------------------------------------------34-----------------------------------------------------------</h1>";
/*34. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с помощью одного цикла и функции str_repeat.*/
for ($i = 1; $i <= 9; $i++)
{
    echo str_repeat('x' , $i).'<br>';
}
echo "<h1>--------------------------------------------35-----------------------------------------------------------</h1>";
/*35. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с помощью одного цикла и функции str_repeat*/
for ($i = 1; $i <= 9; $i++)
{
    echo str_repeat($i , $i).'<br>';
}