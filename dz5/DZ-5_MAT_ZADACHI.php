<?php
echo '<h1>-------------------------------------Работа с %----------------------------------------------------------</h1>';
echo '<h1>-----------------------------------------1--------------------------------------------------------------</h1>';
/*1. Даны переменные $a = 10 и $b = 3. Найдите остаток от деления $a на $b.*/
$a = 10;
$b = 3;
echo $a % $b;

echo '<h1>-----------------------------------------2--------------------------------------------------------------</h1>';
/*2. Даны переменные $a и $b. Проверьте, что $a делится без остатка на $b. Если это так — выведите 'Делится' и результат деления, иначе выведите 'Делится с остатком' и остаток от деления.*/

$c = $a % $b;
if ($c == 0) {
    echo 'Делится';
} else {
    echo 'Делится с остатком ' . $c;
}
echo '<h1>---------------------------------Работа с модулем------------------------------------------------------</h1>';
echo '<h1>-----------------------------------------3--------------------------------------------------------------</h1>';
/*3. Даны переменные $a и $b. Найдите найдите модуль разности $a и $b. Проверьте работу скрипта самостоятельно для различных $a и $b.*/
$a1 = 20;
$b1 = 24;
echo abs($a1 - $b1);
echo '<h1>-----------------------------------------4--------------------------------------------------------------</h1>';
/*4. Даны переменные $a и $b. Отнимите от $a переменную $b и результат присвойте переменной $c. Сделайте так, чтобы в любом случае в переменную $c записалось положительное значение. Проверьте работу скрипта при $a и $b, равных соответственно 3 и 5, 6 и 1*/
$a2 = 7;
$b2 = 6;
$c2 = abs($a2 - $b2);
echo $c2;

echo '<h1>---------------------------------Работа со степенью и корнем------------------------------------------------------</h1>';
echo '<h1>-----------------------------------------5--------------------------------------------------------------</h1>';
/*5. Возведите 2 в 10 степень. Результат запишите в переменную $st.*/
$step = pow(2, 10);
echo $step;

echo '<h1>-----------------------------------------6--------------------------------------------------------------</h1>';
/*6. Найдите квадратный корень из 245.*/
$sqrt = sqrt(245);
echo $sqrt;

echo '<h1>-----------------------------------------7--------------------------------------------------------------</h1>';
/*7. Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите квадратный корень из суммы квадратов его элементов. Для решения воспользуйтесь циклом foreach.*/
$arr = array(4, 2, 5, 19, 13, 0, 10);
$d = 0;
foreach ($arr as $elem) {
    $d += sqrt($elem);
}
$result = sqrt($d);
echo $result;

echo '<h1>---------------------------------Работа с функциями округления------------------------------------------------------</h1>';
echo '<h1>-----------------------------------------8--------------------------------------------------------------</h1>';
/*8. Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых.*/
echo round(sqrt(379)) . '<br>';
echo round(sqrt(379), 1) . '<br>';
echo round(sqrt(379), 2);

echo '<h1>-----------------------------------------9--------------------------------------------------------------</h1>';
/*9. Найдите квадратный корень из 587. Округлите результат в большую и меньшую сторону, запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'.*/
$sqrt1 = sqrt(587);
$ceil = ceil($sqrt1);
$floor = floor($sqrt1);
$arr1 = array('floor' => $floor, 'ceil' => $ceil);
print_r($arr1);

echo '<h1>---------------------------------Работа с min и max------------------------------------------------------</h1>';
echo '<h1>-----------------------------------------10--------------------------------------------------------------</h1>';
/*10. Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число.*/
$arr2 = array(4, -2, 5, 19, -130, 0, 10);
echo max($arr2) . ' максимальное значение <br>';
echo min($arr2) . ' минимальне значение';

echo '<h1>---------------------------------Работа с рандомом------------------------------------------------------</h1>';
echo '<h1>-----------------------------------------11--------------------------------------------------------------</h1>';
/*11. Выведите на экран случайное число от 1 до 100.*/
echo rand(1, 100);

echo '<h1>-----------------------------------------12--------------------------------------------------------------</h1>';
/*12. Сделайте так, чтобы каждый раз при обновлении страницы на экран выводилась случайным образом одна из трех картинок.*/
$rand = mt_rand(1, 3);
echo '<img src="' . $rand . '.png">';

echo '<h1>-----------------------------------------13--------------------------------------------------------------</h1>';
/*13. Заполните массив 10-ю случайными числами. (Подсказка: нужно воспользоваться циклами for или while).*/
$arr3 = array();
for ($i = 1; $i <= 10; $i++) {
    $arr3[] = mt_rand(1, 100);
}
print_r($arr3);

echo '<h1>---------------------------------Общие задачи------------------------------------------------------</h1>';
echo '<h1>-----------------------------------------15--------------------------------------------------------------</h1>';
/*15. Напишите скрипт, который   будет находить факториал числа. Факториал — это произведение всех целых чисел, меньше данного. Например, 4! = 1*2*3*4 = 24.*/
$n = 7;
$result = 1;
for ($i = 1; $i <= $n; $i++) {
    $result *= $i;
}
echo $result;

echo '<h1>-----------------------------------------16--------------------------------------------------------------</h1>';
/*16. Напишите скрипт, который проверяет, является ли данное число простым (простое число — это то, которое делится только на 1 и на само себя).*/

function isPrime($number)
{
    if ($number == 2)
        echo 'Простое число';
    if ($number % 2 == 0)
        return false;
    $i = 3;
    $max_factor = (int)sqrt($number);
    while ($i <= $max_factor) {
        if ($number % $i == 0)
            return false;
        $i += 2;
    }
    echo $number . ' - Простое число ';
}

isPrime(5);

echo '<h1>-----------------------------------------17--------------------------------------------------------------</h1>';
/*17. Дан массив $arr. Найдите среднее арифметическое его элементов. Подсказка: количество элементов массива можно подсчитать функцией count. Проверьте задачу на массиве с элементами 12, 15, 20, 25, 59, 79.*/
$arr5 = [12, 15, 20, 25, 59, 79];
$num = 0;
foreach ($arr5 as $elem1) {
    $num += $elem1;
}
echo $num / count($arr5);

echo '<h1>-----------------------------------------18--------------------------------------------------------------</h1>';
/*18. Напишите скрипт-калькулятор единого налога. Налог считается так: если вы заработали менее, чем ставка $stavka этого налога, умноженная на 30 — то платите ставку. Если же вы заработали более, чем 30*$stavka, то платите не только ставку налога, но и 5% от той суммы, на которую вы превысили 30*$stavka.*/
$zp = 100000;
$stavka = 700;
if ($zp < $stavka * 30) {
    echo 'Платите ставку ' . $stavka;
} else {
    $zp -= $stavka * 30;
    $nalog = (($zp / 100) * 5) + $stavka;
    echo 'нужно заплатить ставку и 5 процентов от прибыли ' . $nalog;
}
echo '<h1>-----------------------------------------19--------------------------------------------------------------</h1>';
/*19. Напишите скрипт-калькулятор оплаты за электроэнергию. Сумма считается так: если вы потратили за месяц менее 150 киловатт, то сумма считается по одной ставке $summ1 за 1 киловатт, всё, что больше 150 и меньше 300 киловатт считается по ставке $summ2, а все киловатты после 300 — по ставке $summ3.*/
$dolg = 250;
$sum = 0.50;
$sum1 = 0.75;
$sum2 = 1;
if ($dolg <= 150) {
    $result = $dolg * $sum;
    echo $result . ' до 150 квт';
} elseif ($dolg > 150 && $dolg <= 300) {
    $a3 = ($dolg - 150) * $sum1;
    $result = (150 * $sum) + $a3;
    echo $result . ' до 300 квт';
} else {
    $a3 = ($dolg - 299) * $sum2;
    $a4 = (300 - 151) * $sum1;
    $result = (150 * $sum) + $a3 + $a4;
    echo $result . ' свыше 300 квт';
}

echo '<h1>-----------------------------------------20--------------------------------------------------------------</h1>';
/*20. Напишите скрипт, который найдет все простые числа в заданном промежутке. Проверьте его работу на промежутке от 1 до 1000.*/
function getPrimes($max_number)
{
    $primes = [];
    for ($i = 3; $i <= $max_number; $i++) {
        if (isPrime($i))
            $primes[] = $i;
    }
    return $primes;
}

getPrimes(1000);
echo '<h1>-----------------------------------------21--------------------------------------------------------------</h1>';
/*21. Напишите скрипт, который будет находить тройки целых чисел, удовлетворяющих теореме Пифагора.*/
$n = 30;
$res = [];
for ($i = 1; $i < $n; $i++) {
    for ($j = 1; $j < $n; $j++) {
        for ($r = 1; $r < $n; $r++) {
            if ($i * $i + $j * $j == $r * $r) {
                $res[$r] = ' ' . $i . ' ' . $j . ' ' . $r;
            }
        }
    }
}
print_r($res);